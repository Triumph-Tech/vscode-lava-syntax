{
  "name": "Lava",
  "scopeName": "text.html.lava",
  "fileTypes": [
    "lava"
  ],
  "foldingStartMarker": "(?x)\n{%\n  -?\n  \\s*\n  (analyticssourcefinancialtransaction|connectionopportunityconnectorgroup|financialscheduledtransactiondetail|interactioncontentchannelitemwrite|analyticsdimfamilyheadofhousehold|analyticsfactfinancialtransaction|connectionopportunitygroupconfig|analyticssourcefamilyhistorical|analyticssourcepersonhistorical|communicationresponseattachment|communicationtemplateattachment|grouplocationhistoricalschedule|eventitemoccurrencechannelitem|contentchannelitemassociation|financialscheduledtransaction|financialtransactionalerttype|registrationtemplateformfield|registrationtemplateplacement|analyticsdimfamilyhistorical|analyticsdimfinancialaccount|analyticsdimpersonhistorical|registrationtemplatediscount|achievementtypeprerequisite|connectionopportunitycampus|eventcalendarcontentchannel|eventitemoccurrencegroupmap|financialpersonsavedaccount|groupmemberscheduletemplate|registrationtemplatefeeitem|remoteauthenticationsession|workflowactionformattribute|workflowformbuildertemplate|analyticsdimfinancialbatch|benevolencerequestdocument|connectionopportunitygroup|connectionstatusautomation|financialpersonbankaccount|financialstatementtemplate|financialtransactiondetail|financialtransactionrefund|followingeventnotification|followingeventsubscription|groupmemberworkflowtrigger|interactionsessionlocation|reservationworkflowtrigger|analyticsdimfamilycurrent|analyticsdimpersoncurrent|analyticssourceattendance|analyticssourcegivingunit|connectionrequestactivity|connectionrequestworkflow|financialtransactionalert|financialtransactionimage|metafirstnamegenderlookup|registrationregistrantfee|schedulecategoryexclusion|signaturedocumenttemplate|workflowactionformsection|attendancecheckinsession|attributevaluehistorical|identityverificationcode|personallinksectionorder|registrationtemplateform|analyticsfactattendance|attributematrixtemplate|communicationattachment|followingsuggestiontype|grouplocationhistorical|personscheduleexclusion|registrationtemplatefee|communicationrecipient|connectionactivitytype|contentchannelitemslug|eventscheduledinstance|financialpaymentdetail|groupmemberrequirement|groupscheduleexclusion|registrationregistrant|analyticssourcecampus|communicationresponse|communicationtemplate|connectionopportunity|groupdemographicvalue|groupmemberassignment|groupmemberhistorical|interactiondevicetype|notificationrecipient|stepprogramcompletion|assetstorageprovider|attendanceoccurrence|financialtransaction|groupdemographictype|grouprequirementtype|identityverification|interactioncomponent|metricvaluepartition|registrationinstance|registrationtemplate|steptypeprerequisite|workflowactivitytype|attributematrixitem|benevolenceworkflow|eventitemoccurrence|personallinksection|registrationsession|reservationlocation|reservationministry|reservationresource|reservationworkflow|stepworkflowtrigger|streaktypeexclusion|systemcommunication|achievementattempt|analyticsdimcampus|attributequalifier|benevolencerequest|connectionworkflow|contentchannelitem|contentchanneltype|entitycampusfilter|followingeventtype|followingsuggested|interactionchannel|interactionsession|metalastnamelookup|metanicknamelookup|personpreviousname|workflowactionform|workflowactiontype|benevolenceresult|connectionrequest|eventcalendaritem|eventitemaudience|servicejobhistory|signaturedocument|webfarmnodemetric|connectionstatus|financialaccount|financialgateway|grouprequirement|interactionwrite|persisteddataset|Rock_Model_Block|workflowactivate|workflowactivity|achievementtype|attributematrix|backgroundcheck|benevolencetype|financialpledge|grouphistorical|metricpartition|personduplicate|personsearchkey|pluginmigration|reservationtype|workflowtrigger|assessmenttype|attendancecode|attributevalue|binaryfiledata|binaryfiletype|calendarevents|campusschedule|connectiontype|contentchannel|dataviewfilter|financialbatch|locationlayout|metriccategory|noteattachment|personaldevice|restcontroller|webfarmnodelog|workflowaction|communication|entitysetitem|eventcalendar|grouplocation|grouptyperole|lavashortcode|mergetemplate|metricytddata|pageshortlink|prayerrequest|relatedentity|authauditlog|definedvalue|documenttype|exceptionlog|mediaaccount|mediaelement|notification|personallink|personsignal|personviewed|registration|stepworkflow|workflowtype|auditdetail|campustopic|definedtype|groupmember|htmlcontent|interaction|mediafolder|metricvalue|ncoahistory|pagecontext|personalias|persontoken|phonenumber|reportfield|reservation|smspipeline|stepprogram|systememail|webfarmnode|workflowlog|javascript|stylesheet|entityname|assessment|attendance|authclient|binaryfile|entitytype|restaction|servicejob|servicelog|signaltype|sitedomain|stepstatus|streaktype|taggeditem|webrequest|attribute|authclaim|authscope|blocktype|entityset|eventitem|fieldtype|following|groupsync|grouptype|notewatch|pageroute|smsaction|userlogin|paginate|business|category|dataview|document|location|notetype|question|resource|schedule|steptype|workflow|capture|comment|history|campus|device|layout|metric|person|report|search|streak|audit|badge|block|group|case|auth|note|page|site|step|for|sql|tag|if)\n  [^(%})]+\n%}\n",
  "foldingStopMarker": "(?x)\n{%\n  \\s*\n  (endanalyticssourcefinancialtransaction|endconnectionopportunityconnectorgroup|endfinancialscheduledtransactiondetail|endinteractioncontentchannelitemwrite|endanalyticsdimfamilyheadofhousehold|endanalyticsfactfinancialtransaction|endconnectionopportunitygroupconfig|endanalyticssourcefamilyhistorical|endanalyticssourcepersonhistorical|endcommunicationresponseattachment|endcommunicationtemplateattachment|endgrouplocationhistoricalschedule|endeventitemoccurrencechannelitem|endcontentchannelitemassociation|endfinancialscheduledtransaction|endfinancialtransactionalerttype|endregistrationtemplateformfield|endregistrationtemplateplacement|endanalyticsdimfamilyhistorical|endanalyticsdimfinancialaccount|endanalyticsdimpersonhistorical|endregistrationtemplatediscount|endachievementtypeprerequisite|endconnectionopportunitycampus|endeventcalendarcontentchannel|endeventitemoccurrencegroupmap|endfinancialpersonsavedaccount|endgroupmemberscheduletemplate|endregistrationtemplatefeeitem|endremoteauthenticationsession|endworkflowactionformattribute|endworkflowformbuildertemplate|endanalyticsdimfinancialbatch|endbenevolencerequestdocument|endconnectionopportunitygroup|endconnectionstatusautomation|endfinancialpersonbankaccount|endfinancialstatementtemplate|endfinancialtransactiondetail|endfinancialtransactionrefund|endfollowingeventnotification|endfollowingeventsubscription|endgroupmemberworkflowtrigger|endinteractionsessionlocation|endreservationworkflowtrigger|endanalyticsdimfamilycurrent|endanalyticsdimpersoncurrent|endanalyticssourceattendance|endanalyticssourcegivingunit|endconnectionrequestactivity|endconnectionrequestworkflow|endfinancialtransactionalert|endfinancialtransactionimage|endmetafirstnamegenderlookup|endregistrationregistrantfee|endschedulecategoryexclusion|endsignaturedocumenttemplate|endworkflowactionformsection|endattendancecheckinsession|endattributevaluehistorical|endidentityverificationcode|endpersonallinksectionorder|endregistrationtemplateform|endanalyticsfactattendance|endattributematrixtemplate|endcommunicationattachment|endfollowingsuggestiontype|endgrouplocationhistorical|endpersonscheduleexclusion|endregistrationtemplatefee|endcommunicationrecipient|endconnectionactivitytype|endcontentchannelitemslug|endeventscheduledinstance|endfinancialpaymentdetail|endgroupmemberrequirement|endgroupscheduleexclusion|endregistrationregistrant|endanalyticssourcecampus|endcommunicationresponse|endcommunicationtemplate|endconnectionopportunity|endgroupdemographicvalue|endgroupmemberassignment|endgroupmemberhistorical|endinteractiondevicetype|endnotificationrecipient|endstepprogramcompletion|endassetstorageprovider|endattendanceoccurrence|endfinancialtransaction|endgroupdemographictype|endgrouprequirementtype|endidentityverification|endinteractioncomponent|endmetricvaluepartition|endregistrationinstance|endregistrationtemplate|endsteptypeprerequisite|endworkflowactivitytype|endattributematrixitem|endbenevolenceworkflow|endeventitemoccurrence|endpersonallinksection|endregistrationsession|endreservationlocation|endreservationministry|endreservationresource|endreservationworkflow|endstepworkflowtrigger|endstreaktypeexclusion|endsystemcommunication|endachievementattempt|endanalyticsdimcampus|endattributequalifier|endbenevolencerequest|endconnectionworkflow|endcontentchannelitem|endcontentchanneltype|endentitycampusfilter|endfollowingeventtype|endfollowingsuggested|endinteractionchannel|endinteractionsession|endmetalastnamelookup|endmetanicknamelookup|endpersonpreviousname|endworkflowactionform|endworkflowactiontype|endbenevolenceresult|endconnectionrequest|endeventcalendaritem|endeventitemaudience|endservicejobhistory|endsignaturedocument|endwebfarmnodemetric|endconnectionstatus|endfinancialaccount|endfinancialgateway|endgrouprequirement|endinteractionwrite|endpersisteddataset|endRock_Model_Block|endworkflowactivate|endworkflowactivity|endachievementtype|endattributematrix|endbackgroundcheck|endbenevolencetype|endfinancialpledge|endgrouphistorical|endmetricpartition|endpersonduplicate|endpersonsearchkey|endpluginmigration|endreservationtype|endworkflowtrigger|endassessmenttype|endattendancecode|endattributevalue|endbinaryfiledata|endbinaryfiletype|endcalendarevents|endcampusschedule|endconnectiontype|endcontentchannel|enddataviewfilter|endfinancialbatch|endlocationlayout|endmetriccategory|endnoteattachment|endpersonaldevice|endrestcontroller|endwebfarmnodelog|endworkflowaction|endcommunication|endentitysetitem|endeventcalendar|endgrouplocation|endgrouptyperole|endlavashortcode|endmergetemplate|endmetricytddata|endpageshortlink|endprayerrequest|endrelatedentity|endauthauditlog|enddefinedvalue|enddocumenttype|endexceptionlog|endmediaaccount|endmediaelement|endnotification|endpersonallink|endpersonsignal|endpersonviewed|endregistration|endstepworkflow|endworkflowtype|endauditdetail|endcampustopic|enddefinedtype|endgroupmember|endhtmlcontent|endinteraction|endmediafolder|endmetricvalue|endncoahistory|endpagecontext|endpersonalias|endpersontoken|endphonenumber|endreportfield|endreservation|endsmspipeline|endstepprogram|endsystememail|endwebfarmnode|endworkflowlog|endjavascript|endstylesheet|endentityname|endassessment|endattendance|endauthclient|endbinaryfile|endentitytype|endrestaction|endservicejob|endservicelog|endsignaltype|endsitedomain|endstepstatus|endstreaktype|endtaggeditem|endwebrequest|endattribute|endauthclaim|endauthscope|endblocktype|endentityset|endeventitem|endfieldtype|endfollowing|endgroupsync|endgrouptype|endnotewatch|endpageroute|endsmsaction|enduserlogin|endpaginate|endbusiness|endcategory|enddataview|enddocument|endlocation|endnotetype|endquestion|endresource|endschedule|endsteptype|endworkflow|endcapture|endcomment|endhistory|endcampus|enddevice|endlayout|endmetric|endperson|endreport|endsearch|endstreak|endaudit|endbadge|endblock|endgroup|endcase|endauth|endnote|endpage|endsite|endstep|endfor|endsql|endtag|endif)\n  [^(%})]+\n%}\n",
  "injections": {
    "L:meta.embedded.block.js, L:meta.embedded.block.css, L:meta.embedded.block.html, L:string.quoted": {
      "patterns": [
        {
          "include": "#injection"
        }
      ]
    }
  },
  "patterns": [
    {
      "include": "#core"
    }
  ],
  "repository": {
    "core": {
      "patterns": [
        {
          "include": "#frontMatter"
        },
        {
          "include": "#raw_tag"
        },
        {
          "include": "#comment_block"
        },
        {
          "include": "#comment_new"
        },
        {
          "include": "#comment_oneline"
        },
        {
          "include": "#csharp_codefence"
        },
        {
          "include": "#sql_codefence"
        },
        {
          "include": "#style_codefence"
        },
        {
          "include": "#javascript_codefence"
        },
        {
          "include": "#cache"
        },
        {
          "include": "#personalize"
        },
        {
          "include": "#webrequest"
        },
        {
          "include": "#search"
        },
        {
          "include": "#eventscheduledinstance"
        },
        {
          "include": "#calendarevents"
        },
        {
          "include": "#interactionwrite"
        },
        {
          "include": "#interactionccwrite"
        },
        {
          "include": "#object"
        },
        {
          "include": "#tag"
        },
        {
          "include": "text.html.basic"
        }
      ]
    },
    "injection": {
      "patterns": [
        {
          "include": "#raw_tag"
        },
        {
          "include": "#comment_block"
        },
        {
          "include": "#comment_inline"
        },
        {
          "include": "#object"
        },
        {
          "include": "#tag_injection"
        }
      ]
    },
    "frontMatter": {
      "begin": "\\A{%-?\\s*comment\\s*-?%}\\s*-{3}\\s*$",
      "end": "(^|\\G)-{3}\\s*{%-?\\s*endcomment\\s*-?%}",
      "contentName": "meta.embedded.block.frontmatter",
      "patterns": [
        {
          "include": "source.yaml"
        }
      ]
    },
    "raw_tag": {
      "begin": "{%-?\\s*(raw)\\s*-?%}",
      "end": "{%-?\\s*(endraw)\\s*-?%}",
      "beginCaptures": {
        "1": {
          "name": "entity.name.tag.lava"
        }
      },
      "endCaptures": {
        "1": {
          "name": "entity.name.tag.lava"
        }
      },
      "name": "meta.entity.tag.raw.lava",
      "contentName": "string.unquoted.lava",
      "patterns": [
        {
          "match": "(.(?!{%-?\\s*endraw\\s*-?%}))*."
        }
      ]
    },
    "comment_block": {
      "begin": "{%-?\\s*comment\\s*-?%}",
      "end": "{%-?\\s*endcomment\\s*-?%}",
      "name": "comment.block.lava",
      "patterns": [
        {
          "include": "#comment_block"
        },
        {
          "match": "(.(?!{%-?\\s*(comment|endcomment)\\s*-?%}))*."
        }
      ]
    },
    "comment_new": {
      "begin": "(^[ \\t]+)?(?=/-)",
      "end": "-/",
      "name": "comment.block.lava"
    },
    "comment_oneline": {
      "begin": "(^[ \\t]+)?(?=//-)",
      "end": "(?!\\G)",
      "patterns": [
        {
          "begin": "//-",
          "beginCaptures": {
            "0": {
              "name": "punctuation.definition.comment.lava"
            }
          },
          "end": "\\n",
          "name": "comment.line.double-slash.lava"
        }
      ]
    },
    "csharp_codefence": {
      "begin": "({%-?)\\s*(execute)\\s*(-?%})",
      "end": "({%-?)\\s*(endexecute)\\s*(-?%})",
      "beginCaptures": {
        "0": {
          "name": "meta.tag.metadata.csharp.start.lava"
        },
        "1": {
          "name": "punctuation.definition.tag.begin.lava"
        },
        "2": {
          "name": "entity.name.tag.csharp.lava"
        },
        "3": {
          "name": "punctuation.definition.tag.begin.lava"
        }
      },
      "endCaptures": {
        "0": {
          "name": "meta.tag.metadata.csharp.end.lava"
        },
        "1": {
          "name": "punctuation.definition.tag.end.lava"
        },
        "2": {
          "name": "entity.name.tag.csharp.lava"
        },
        "3": {
          "name": "punctuation.definition.tag.end.lava"
        }
      },
      "name": "meta.block.csharp.lava",
      "contentName": "meta.embedded.block.csharp",
      "patterns": [
        {
          "include": "source.cs"
        }
      ]
    },
    "sql_codefence": {
      "begin": "({%)(-)?\\s*(sql)\\s*(.*?)\\s*(-)?(%})",
      "end": "({%)(-)?\\s+(endsql)\\s+(-)?(%})",
      "beginCaptures": {
        "1": {
          "name": "punctuation.definition.tag.begin.lava"
        },
        "2": {
          "name": "keyword.other.whitespace.lava"
        },
        "3": {
          "name": "entity.name.tag.sql.lava"
        },
        "4": {
          "patterns": [
            {
              "match": "\\b(\\S+:)\\s*('[^']*')",
              "captures": {
                "1": {
                  "name": "variable.parameter.lava"
                },
                "2": {
                  "name": "string.quoted.single.lava"
                }
              }
            }
          ]
        },
        "5": {
          "name": "keyword.other.whitespace.lava"
        },
        "6": {
          "name": "punctuation.definition.tag.end.lava"
        }
      },
      "endCaptures": {
        "1": {
          "name": "punctuation.definition.tag.begin.lava"
        },
        "2": {
          "name": "keyword.other.whitespace.lava"
        },
        "3": {
          "name": "entity.name.tag.sql.lava"
        },
        "4": {
          "name": "keyword.other.whitespace.lava"
        },
        "5": {
          "name": "punctuation.definition.tag.end.lava"
        }
      },
      "name": "embed.sql.lava",
      "contentName": "meta.embedded.inline.sql",
      "patterns": [
        {
          "include": "source.sql"
        }
      ]
    },
    "style_codefence": {
      "begin": "({%)(-)?\\s*(stylesheet)\\s*(.*?)\\s*(-)?(%})",
      "end": "({%)(-)?\\s+(endstylesheet)\\s+(-)?(%})",
      "beginCaptures": {
        "1": {
          "name": "punctuation.definition.tag.begin.lava"
        },
        "2": {
          "name": "keyword.other.whitespace.lava"
        },
        "3": {
          "name": "entity.name.tag.stylesheet.lava"
        },
        "4": {
          "patterns": [
            {
              "match": "\\b(id:|compile:|import:)\\s*('[^']*')",
              "captures": {
                "1": {
                  "name": "variable.parameter.lava"
                },
                "2": {
                  "name": "string.quoted.single.lava"
                }
              }
            },
            {
              "match": "\\b(cacheduration:)\\s*('[0-9]*')",
              "captures": {
                "1": {
                  "name": "variable.parameter.lava"
                },
                "2": {
                  "name": "string.quoted.single.lava"
                }
              }
            },
            {
              "match": "\\b(cacheduration:)\\s*('[^']*')",
              "captures": {
                "1": {
                  "name": "variable.parameter.lava"
                },
                "2": {
                  "name": "invalid.illegal.string.lava"
                }
              }
            },
            {
              "match": "\\b(\\S+:)\\s*('[^']*')",
              "name": "invalid.illegal.filter.lava"
            }
          ]
        },
        "5": {
          "name": "keyword.other.whitespace.lava"
        },
        "6": {
          "name": "punctuation.definition.tag.end.lava"
        }
      },
      "endCaptures": {
        "1": {
          "name": "punctuation.definition.tag.begin.lava"
        },
        "2": {
          "name": "keyword.other.whitespace.lava"
        },
        "3": {
          "name": "entity.name.tag.stylesheet.lava"
        },
        "4": {
          "name": "keyword.other.whitespace.lava"
        },
        "5": {
          "name": "punctuation.definition.tag.end.lava"
        }
      },
      "name": "meta.block.stylesheet.lava",
      "contentName": "meta.embedded.block.less",
      "patterns": [
        {
          "include": "source.css.less"
        }
      ]
    },
    "javascript_codefence": {
      "begin": "({%-?)\\s*(javascript)\\s*(.*?)\\s*(-?%})",
      "end": "({%-?)\\s*(endjavascript)\\s*(-?%})",
      "beginCaptures": {
        "0": {
          "name": "meta.tag.metadata.javascript.start.lava"
        },
        "1": {
          "name": "punctuation.definition.tag.begin.lava"
        },
        "2": {
          "name": "entity.name.tag.javascript.lava"
        },
        "3": {
          "patterns": [
            {
              "match": "\\b(id|references|disableanonymousfunction|url):\\s*('[^']*')",
              "captures": {
                "1": {
                  "name": "variable.paramter.lava"
                },
                "2": {
                  "name": "string.quoted.single.lava"
                }
              },
              "include": "#illegal_command_parameter"
            }
          ]
        },
        "4": {
          "name": "punctuation.definition.tag.begin.lava"
        }
      },
      "endCaptures": {
        "0": {
          "name": "meta.tag.metadata.javascript.end.lava"
        },
        "1": {
          "name": "punctuation.definition.tag.end.lava"
        },
        "2": {
          "name": "entity.name.tag.javascript.lava"
        },
        "3": {
          "name": "punctuation.definition.tag.end.lava"
        }
      },
      "name": "meta.block.javascript.lava",
      "contentName": "meta.embedded.block.js",
      "patterns": [
        {
          "include": "source.js"
        }
      ]
    },
    "cache": {
      "begin": "({%)(-)?\\s*(cache)\\s*(.*?)\\s*(-)?(%})",
      "beginCaptures": {
        "1": {
          "name": "punctuation.definition.tag.begin.lava"
        },
        "2": {
          "name": "keyword.other.whitespace.lava"
        },
        "3": {
          "name": "keyword.control.lava"
        },
        "4": {
          "patterns": [
            {
              "match": "\\b(key:|twopass:|tags:)\\s*('[^']*')",
              "captures": {
                "1": {
                  "name": "variable.parameter.lava"
                },
                "2": {
                  "name": "string.quoted.single.lava"
                }
              }
            },
            {
              "match": "\\b(duration:|maxcachesize:)\\s*('[0-9]*')",
              "captures": {
                "1": {
                  "name": "variable.parameter.lava"
                },
                "2": {
                  "name": "string.quoted.single.lava"
                }
              }
            },
            {
              "match": "\\b(duration:|maxcachesize:)\\s*('[^']*')",
              "captures": {
                "1": {
                  "name": "variable.parameter.lava"
                },
                "2": {
                  "name": "invalid.illegal.string.lava"
                }
              }
            },
            {
              "match": "\\b(\\S+:)\\s*('[^']*')",
              "name": "invalid.illegal.filter.lava"
            }
          ]
        },
        "5": {
          "name": "keyword.other.whitespace.lava"
        },
        "6": {
          "name": "punctuation.definition.tag.end.lava"
        }
      },
      "end": "({%)(-)?\\s+(endcache)\\s+(-)?(%})",
      "endCaptures": {
        "1": {
          "name": "punctuation.definition.tag.begin.lava"
        },
        "2": {
          "name": "keyword.other.whitespace.lava"
        },
        "3": {
          "name": "keyword.control.lava"
        },
        "4": {
          "name": "keyword.other.whitespace.lava"
        },
        "5": {
          "name": "punctuation.definition.tag.end.lava"
        }
      },
      "patterns": [
        {
          "include": "text.html.lava"
        }
      ]
    },
    "personalize": {
      "begin": "({%)(-)?\\s*(personalize)\\s*(.*?)\\s*(-)?(%})",
      "beginCaptures": {
        "1": {
          "name": "punctuation.definition.tag.begin.lava"
        },
        "2": {
          "name": "keyword.other.whitespace.lava"
        },
        "3": {
          "name": "keyword.control.lava"
        },
        "4": {
          "patterns": [
            {
              "match": "\\b(segment:|requestfilter:|matchtype:)\\s*('[^']*')",
              "captures": {
                "1": {
                  "name": "variable.parameter.lava"
                },
                "2": {
                  "name": "string.quoted.single.lava"
                }
              }
            },
            {
              "match": "\\b(\\S+:)\\s*('[^']*')",
              "name": "invalid.illegal.filter.lava"
            }
          ]
        },
        "5": {
          "name": "keyword.other.whitespace.lava"
        },
        "6": {
          "name": "punctuation.definition.tag.end.lava"
        }
      },
      "end": "({%)(-)?\\s+(endpersonalize)\\s+(-)?(%})",
      "endCaptures": {
        "1": {
          "name": "punctuation.definition.tag.begin.lava"
        },
        "2": {
          "name": "keyword.other.whitespace.lava"
        },
        "3": {
          "name": "keyword.control.lava"
        },
        "4": {
          "name": "keyword.other.whitespace.lava"
        },
        "5": {
          "name": "punctuation.definition.tag.end.lava"
        }
      },
      "patterns": [
        {
          "include": "#otherwise"
        },
        {
          "include": "text.html.lava"
        }
      ]
    },
    "search": {
      "begin": "({%)(-)?\\s*(search)\\s*(.*?)\\s*(-)?(%})",
      "beginCaptures": {
        "1": {
          "name": "punctuation.definition.tag.begin.lava"
        },
        "2": {
          "name": "keyword.other.whitespace.lava"
        },
        "3": {
          "name": "keyword.control.lava"
        },
        "4": {
          "patterns": [
            {
              "match": "\\b(query:|entities:|fieldcriteria:|criteriasearchtype:|searchtype:|iterator:)\\s*('[^']*')",
              "captures": {
                "1": {
                  "name": "variable.parameter.lava"
                },
                "2": {
                  "name": "string.quoted.single.lava"
                }
              }
            },
            {
              "match": "\\b(limit:|offset:)\\s*('[0-9]*')",
              "captures": {
                "1": {
                  "name": "variable.parameter.lava"
                },
                "2": {
                  "name": "string.quoted.single.lava"
                }
              }
            },
            {
              "match": "\\b(limit:|offset:)\\s*('[^']*')",
              "captures": {
                "1": {
                  "name": "variable.parameter.lava"
                },
                "2": {
                  "name": "invalid.illegal.string.lava"
                }
              }
            },
            {
              "match": "\\b(\\S+:)\\s*('[^']*')",
              "name": "invalid.illegal.filter.lava"
            }
          ]
        },
        "5": {
          "name": "keyword.other.whitespace.lava"
        },
        "6": {
          "name": "punctuation.definition.tag.end.lava"
        }
      },
      "end": "({%)(-)?\\s+(endsearch)\\s+(-)?(%})",
      "endCaptures": {
        "1": {
          "name": "punctuation.definition.tag.begin.lava"
        },
        "2": {
          "name": "keyword.other.whitespace.lava"
        },
        "3": {
          "name": "keyword.control.lava"
        },
        "4": {
          "name": "keyword.other.whitespace.lava"
        },
        "5": {
          "name": "punctuation.definition.tag.end.lava"
        }
      },
      "patterns": [
        {
          "include": "text.html.lava"
        }
      ]
    },
    "eventscheduledinstance": {
      "begin": "({%)(-)?\\s*(eventscheduledinstance)\\s*(.*?)\\s*(-)?(%})",
      "end": "({%)(-)?\\s+(endeventscheduledinstance)\\s+(-)?(%})",
      "beginCaptures": {
        "1": {
          "name": "punctuation.definition.tag.begin.lava"
        },
        "2": {
          "name": "keyword.other.whitespace.lava"
        },
        "3": {
          "name": "keyword.control.lava"
        },
        "4": {
          "patterns": [
            {
              "match": "\\b(eventid:|maxoccurrences:|daterange:|campusids:)\\s*('[^']*')",
              "captures": {
                "1": {
                  "name": "variable.parameter.lava"
                },
                "2": {
                  "name": "string.quoted.single.lava"
                }
              }
            },
            {
              "match": "\\b(\\S+:)\\s*('[^']*')",
              "name": "invalid.illegal.filter.lava"
            }
          ]
        },
        "5": {
          "name": "keyword.other.whitespace.lava"
        },
        "6": {
          "name": "punctuation.definition.tag.end.lava"
        }
      },
      "endCaptures": {
        "1": {
          "name": "punctuation.definition.tag.begin.lava"
        },
        "2": {
          "name": "keyword.other.whitespace.lava"
        },
        "3": {
          "name": "keyword.control.lava"
        },
        "4": {
          "name": "keyword.other.whitespace.lava"
        },
        "5": {
          "name": "punctuation.definition.tag.end.lava"
        }
      },
      "patterns": [
        {
          "include": "text.html.lava"
        }
      ]
    },
    "calendarevents": {
      "begin": "({%)(-)?\\s*(calendarevents)\\s*(.*?)\\s*(-)?(%})",
      "end": "({%)(-)?\\s+(endcalendarevents)\\s+(-)?(%})",
      "beginCaptures": {
        "1": {
          "name": "punctuation.definition.tag.begin.lava"
        },
        "2": {
          "name": "keyword.other.whitespace.lava"
        },
        "3": {
          "name": "keyword.control.lava"
        },
        "4": {
          "patterns": [
            {
              "match": "\\b(calendarid:|maxoccurrences:|daterange:|audienceids:|campusids:)\\s*('[^']*')",
              "captures": {
                "1": {
                  "name": "variable.parameter.lava"
                },
                "2": {
                  "name": "string.quoted.single.lava"
                }
              }
            },
            {
              "match": "\\b(\\S+:)\\s*('[^']*')",
              "name": "invalid.illegal.filter.lava"
            }
          ]
        },
        "5": {
          "name": "keyword.other.whitespace.lava"
        },
        "6": {
          "name": "punctuation.definition.tag.end.lava"
        }
      },
      "endCaptures": {
        "1": {
          "name": "punctuation.definition.tag.begin.lava"
        },
        "2": {
          "name": "keyword.other.whitespace.lava"
        },
        "3": {
          "name": "keyword.control.lava"
        },
        "4": {
          "name": "keyword.other.whitespace.lava"
        },
        "5": {
          "name": "punctuation.definition.tag.end.lava"
        }
      },
      "patterns": [
        {
          "include": "text.html.lava"
        }
      ]
    },
    "interactionwrite": {
      "begin": "({%)(-)?\\s*(interactionwrite)\\s*(.*?)\\s*(-)?(%})",
      "end": "({%)(-)?\\s+(endinteractionwrite)\\s+(-)?(%})",
      "beginCaptures": {
        "1": {
          "name": "punctuation.definition.tag.begin.lava"
        },
        "2": {
          "name": "keyword.other.whitespace.lava"
        },
        "3": {
          "name": "keyword.control.lava"
        },
        "4": {
          "patterns": [
            {
              "match": "\\b(channeltypemediumvalueid:|channelentityid:|channelname:|componententitytypeid:|componententityid:|componentname:|interactionentitytypeid:|entityid:|operation:|summary:|relatedentitytypeid:|relatedentityid:|channelcustom1:|channelcustom2:|channelcustomindexed1:|personaliasid:|campaign:|source:|medium:|content:|term:|data:)\\s*('[^']*')",
              "captures": {
                "1": {
                  "name": "variable.parameter.lava"
                },
                "2": {
                  "name": "string.quoted.single.lava"
                }
              }
            },
            {
              "match": "\\b(\\S+:)\\s*('[^']*')",
              "name": "invalid.illegal.filter.lava"
            }
          ]
        },
        "5": {
          "name": "keyword.other.whitespace.lava"
        },
        "6": {
          "name": "punctuation.definition.tag.end.lava"
        }
      },
      "endCaptures": {
        "1": {
          "name": "punctuation.definition.tag.begin.lava"
        },
        "2": {
          "name": "keyword.other.whitespace.lava"
        },
        "3": {
          "name": "keyword.control.lava"
        },
        "4": {
          "name": "keyword.other.whitespace.lava"
        },
        "5": {
          "name": "punctuation.definition.tag.end.lava"
        }
      },
      "patterns": [
        {
          "include": "text.html.lava"
        }
      ]
    },
    "interactionccwrite": {
      "match": "({%)(-)?\\s*(interactioncontentchannelitemwrite)\\s*(.*?)\\s*(-)?(%})",
      "captures": {
        "1": {
          "name": "punctuation.definition.tag.begin.lava"
        },
        "2": {
          "name": "keyword.other.whitespace.lava"
        },
        "3": {
          "name": "keyword.control.lava"
        },
        "4": {
          "patterns": [
            {
              "match": "\\b(contentchannelitemid:|operation:|summary:|personaliasid:|campaign:|medium:|source:|content:|term:)\\s*('[^']*')",
              "captures": {
                "1": {
                  "name": "variable.parameter.lava"
                },
                "2": {
                  "name": "string.quoted.single.lava"
                }
              }
            },
            {
              "match": "\\b(\\S+:)\\s*('[^']*')",
              "name": "invalid.illegal.filter.lava"
            }
          ]
        },
        "5": {
          "name": "keyword.other.whitespace.lava"
        },
        "6": {
          "name": "punctuation.definition.tag.end.lava"
        }
      },
      "patterns": [
        {
          "include": "text.html.lava"
        }
      ]
    },
    "webrequest": {
      "begin": "({%)(-)?\\s*(webrequest)\\s*(.*?)\\s*(-)?(%})",
      "end": "({%)(-)?\\s+(endwebrequest)\\s+(-)?(%})",
      "beginCaptures": {
        "1": {
          "name": "punctuation.definition.tag.begin.lava"
        },
        "2": {
          "name": "keyword.other.whitespace.lava"
        },
        "3": {
          "name": "keyword.control.lava"
        },
        "4": {
          "patterns": [
            {
              "match": "\\b(url:|parameters:|headers:|method:|basicauth:|body:|requestcontenttype:|responsecontenttype:|return:|requesttype:|timeout:)\\s*('[^']*')",
              "captures": {
                "1": {
                  "name": "variable.parameter.lava"
                },
                "2": {
                  "name": "string.quoted.single"
                }
              }
            }
          ]
        },
        "5": {
          "name": "keyword.other.whitespace.lava"
        },
        "6": {
          "name": "punctuation.definition.tag.end.lava"
        }
      },
      "endCaptures": {
        "1": {
          "name": "punctuation.definition.tag.begin.lava"
        },
        "2": {
          "name": "keyword.other.whitespace.lava"
        },
        "3": {
          "name": "keyword.control.lava"
        },
        "4": {
          "name": "keyword.other.whitespace.lava"
        },
        "5": {
          "name": "punctuation.definition.tag.end.lava"
        }
      },
      "patterns": [
        {
          "include": "text.html.lava"
        }
      ]
    },
    "tag": {
      "begin": "(?<!comment %})(?<!comment -%})(?<!comment%})(?<!comment-%})(?<!raw %})(?<!raw -%})(?<!raw%})(?<!raw-%}){%-?",
      "end": "-?%}",
      "name": "meta.tag.lava",
      "beginCaptures": {
        "0": {
          "name": "punctuation.definition.tag.begin.lava"
        }
      },
      "endCaptures": {
        "0": {
          "name": "punctuation.definition.tag.end.lava"
        }
      },
      "patterns": [
        {
          "include": "#tag_body"
        }
      ]
    },
    "tag_injection": {
      "begin": "(?<!comment %})(?<!comment -%})(?<!comment%})(?<!comment-%})(?<!raw %})(?<!raw -%})(?<!raw%})(?<!raw-%}){%-?(?!-?\\s*(endstyle|endjavascript|endcomment|endraw))",
      "end": "-?%}",
      "name": "meta.tag.lava",
      "beginCaptures": {
        "0": {
          "name": "punctuation.definition.tag.end.lava"
        }
      },
      "endCaptures": {
        "0": {
          "name": "punctuation.definition.tag.end.lava"
        }
      },
      "patterns": [
        {
          "include": "#tag_body"
        }
      ]
    },
    "tag_body": {
      "patterns": [
        {
          "include": "#tag_lava"
        },
        {
          "include": "#tag_entity_command"
        },
        {
          "include": "#tag_assign"
        },
        {
          "include": "#tag_case"
        },
        {
          "include": "#tag_conditional"
        },
        {
          "include": "#tag_for"
        },
        {
          "include": "#tag_render"
        },
        {
          "include": "#tag_include"
        },
        {
          "include": "#tag_tablerow"
        },
        {
          "include": "#tag_expression"
        }
      ]
    },
    "tag_lava": {
      "name": "meta.entity.tag.lava.lava",
      "begin": "(?:(?:(?<={%)|(?<={%-)|^)\\s*)(lava)\\b",
      "beginCaptures": {
        "1": {
          "name": "keyword.control.lava.lava"
        }
      },
      "end": "(?=%})",
      "patterns": [
        {
          "include": "#tag_comment_lava"
        },
        {
          "include": "#tag_assign_lava"
        },
        {
          "include": "#tag_case_lava"
        },
        {
          "include": "#tag_conditional_lava"
        },
        {
          "include": "#tag_for_lava"
        },
        {
          "include": "#tag_render_lava"
        },
        {
          "include": "#tag_include_lava"
        },
        {
          "include": "#tag_tablerow_lava"
        },
        {
          "include": "#tag_expression_lava"
        }
      ]
    },
    "tag_comment_lava": {
      "name": "comment.block.lava",
      "begin": "(?:^\\s*)(comment)\\b",
      "end": "(?:^\\s*)(endcomment)\\b"
    },
    "tag_tablerow": {
      "name": "meta.entity.tag.tablerow.lava",
      "begin": "(?:(?:(?<={%)|(?<={%-)|^)\\s*)(tablerow)\\b",
      "beginCaptures": {
        "1": {
          "name": "keyword.control.tablerow.lava"
        }
      },
      "end": "(?=%})",
      "patterns": [
        {
          "include": "#tag_tablerow_body"
        }
      ]
    },
    "tag_tablerow_lava": {
      "name": "meta.entity.tag.tablerow.lava",
      "begin": "(?:(?:(?<={%)|(?<={%-)|^)\\s*)(tablerow)\\b",
      "beginCaptures": {
        "1": {
          "name": "keyword.control.tablerow.lava"
        }
      },
      "end": "$",
      "patterns": [
        {
          "include": "#tag_tablerow_body"
        }
      ]
    },
    "tag_tablerow_body": {
      "patterns": [
        {
          "match": "\\b(in)\\b",
          "name": "keyword.control.lava"
        },
        {
          "match": "\\b(cols|offset|limit):",
          "name": "keyword.control.lava"
        },
        {
          "include": "#value_expression"
        }
      ]
    },
    "tag_for": {
      "name": "meta.entity.tag.for.lava",
      "begin": "(?:(?:(?<={%)|(?<={%-)|^)\\s*)(for)\\b",
      "beginCaptures": {
        "1": {
          "name": "keyword.control.for.lava"
        }
      },
      "end": "(?=%})",
      "patterns": [
        {
          "include": "#tag_for_body"
        }
      ]
    },
    "tag_for_lava": {
      "name": "meta.entity.tag.for.lava",
      "begin": "(?:(?:(?<={%)|(?<={%-)|^)\\s*)(for)\\b",
      "beginCaptures": {
        "1": {
          "name": "keyword.control.for.lava"
        }
      },
      "end": "$",
      "patterns": [
        {
          "include": "#tag_for_body"
        }
      ]
    },
    "tag_for_body": {
      "patterns": [
        {
          "match": "\\b(in|reversed)\\b",
          "name": "keyword.control.lava"
        },
        {
          "match": "\\b(offset|limit):",
          "name": "keyword.control.lava"
        },
        {
          "include": "#value_expression"
        }
      ]
    },
    "tag_assign": {
      "name": "meta.entity.tag.lava",
      "begin": "(?:(?:(?<={%)|(?<={%-)|^)\\s*)(assign|echo)\\s*([a-zA-Z0-9_]+)\\s*(=)\\s*",
      "beginCaptures": {
        "1": {
          "name": "storage.type.lava"
        },
        "2": {
          "name": "variable.other.readwrite.lava"
        },
        "3": {
          "name": "keyword.operator.assignment.lava"
        }
      },
      "end": "(?=%})",
      "patterns": [
        {
          "include": "#filter"
        },
        {
          "include": "#attribute"
        },
        {
          "include": "#value_expression"
        }
      ]
    },
    "tag_assign_lava": {
      "name": "meta.entity.tag.lava",
      "begin": "(?:(?:(?<={%)|(?<={%-)|^)\\s*)(assign|echo)\\s*([a-zA-Z0-9_]+)\\s*(=)\\s*",
      "beginCaptures": {
        "1": {
          "name": "storage.type.lava"
        },
        "2": {
          "name": "variable.other.readwrite.lava"
        },
        "3": {
          "name": "keyword.operator.assignment.lava"
        }
      },
      "end": "$",
      "patterns": [
        {
          "include": "#filter"
        },
        {
          "include": "#attribute_lava"
        },
        {
          "include": "#value_expression"
        }
      ]
    },
    "tag_render": {
      "name": "meta.entity.tag.render.lava",
      "begin": "(?:(?:(?<={%)|(?<={%-)|^)\\s*)(render)\\b",
      "beginCaptures": {
        "1": {
          "name": "entity.name.tag.render.lava"
        }
      },
      "end": "(?=%})",
      "patterns": [
        {
          "include": "#tag_render_special_keywords"
        },
        {
          "include": "#attribute"
        },
        {
          "include": "#value_expression"
        }
      ]
    },
    "tag_render_lava": {
      "name": "meta.entity.tag.render.lava",
      "begin": "(?:(?:(?<={%)|(?<={%-)|^)\\s*)(render)\\b",
      "beginCaptures": {
        "1": {
          "name": "entity.name.tag.render.lava"
        }
      },
      "end": "$",
      "patterns": [
        {
          "include": "#tag_render_special_keywords"
        },
        {
          "include": "#attribute_lava"
        },
        {
          "include": "#value_expression"
        }
      ]
    },
    "tag_render_special_keywords": {
      "match": "\\b(with|as|for)\\b",
      "name": "keyword.control.other.lava"
    },
    "tag_include": {
      "name": "meta.entity.tag.include.lava",
      "begin": "(?:(?:(?<={%)|(?<={%-)|^)\\s*)(include)\\b",
      "beginCaptures": {
        "1": {
          "name": "entity.name.tag.render.lava"
        }
      },
      "end": "(?=%})",
      "patterns": [
        {
          "include": "#attribute"
        },
        {
          "include": "#value_expression"
        }
      ]
    },
    "tag_include_lava": {
      "name": "meta.entity.tag.include.lava",
      "begin": "(?:(?:(?<={%)|(?<={%-)|^)\\s*)(include)\\b",
      "beginCaptures": {
        "1": {
          "name": "entity.name.tag.include.lava"
        }
      },
      "end": "$",
      "patterns": [
        {
          "include": "#attribute_lava"
        },
        {
          "include": "#value_expression"
        }
      ]
    },
    "tag_conditional": {
      "name": "meta.entity.tag.conditional.lava",
      "begin": "(?:(?:(?<={%)|(?<={%-)|^)\\s*)(if|elseif|unless)\\b",
      "beginCaptures": {
        "1": {
          "name": "keyword.control.conditional.lava"
        }
      },
      "end": "(?=%})",
      "patterns": [
        {
          "include": "#value_expression"
        }
      ]
    },
    "tag_otherwise": {
      "match": "(?:(?:(?<={%)|(?<={%-)|^)\\s*)(else|break|continue|return)\\b",
      "captures": {
        "1": {
          "name": "keyword.control.other.lava"
        }
      }
    },
    "tag_conditional_lava": {
      "name": "meta.entity.tag.conditional.lava",
      "begin": "(?:(?:(?<={%)|(?<={%-)|^)\\s*)(if|elseif|unless)\\b",
      "beginCaptures": {
        "1": {
          "name": "keyword.control.conditional.lava"
        }
      },
      "end": "$",
      "patterns": [
        {
          "include": "#value_expression"
        }
      ]
    },
    "tag_case": {
      "name": "meta.entity.tag.case.lava",
      "begin": "(?:(?:(?<={%)|(?<={%-)|^)\\s*)(case|when)\\b",
      "beginCaptures": {
        "1": {
          "name": "keyword.control.case.lava"
        }
      },
      "end": "(?=%})",
      "patterns": [
        {
          "include": "#value_expression"
        }
      ]
    },
    "tag_case_lava": {
      "name": "meta.entity.tag.case.lava",
      "begin": "(?:(?:(?<={%)|(?<={%-)|^)\\s*)(case|when)\\b",
      "beginCaptures": {
        "1": {
          "name": "keyword.control.case.lava"
        }
      },
      "end": "$",
      "patterns": [
        {
          "include": "#value_expression"
        }
      ]
    },
    "tag_expression_without_arguments": {
      "patterns": [
        {
          "match": "(?:(?:(?<={%)|(?<={%-)|^)\\s*)(endunless|endif)\\b",
          "captures": {
            "1": {
              "name": "keyword.control.conditional.lava"
            }
          }
        },
        {
          "match": "(?:(?:(?<={%)|(?<={%-)|^)\\s*)(end(analyticssourcefinancialtransaction|connectionopportunityconnectorgroup|financialscheduledtransactiondetail|interactioncontentchannelitemwrite|analyticsdimfamilyheadofhousehold|analyticsfactfinancialtransaction|connectionopportunitygroupconfig|analyticssourcefamilyhistorical|analyticssourcepersonhistorical|communicationresponseattachment|communicationtemplateattachment|grouplocationhistoricalschedule|eventitemoccurrencechannelitem|contentchannelitemassociation|financialscheduledtransaction|financialtransactionalerttype|registrationtemplateformfield|registrationtemplateplacement|analyticsdimfamilyhistorical|analyticsdimfinancialaccount|analyticsdimpersonhistorical|registrationtemplatediscount|achievementtypeprerequisite|connectionopportunitycampus|eventcalendarcontentchannel|eventitemoccurrencegroupmap|financialpersonsavedaccount|groupmemberscheduletemplate|registrationtemplatefeeitem|remoteauthenticationsession|workflowactionformattribute|workflowformbuildertemplate|analyticsdimfinancialbatch|benevolencerequestdocument|connectionopportunitygroup|connectionstatusautomation|financialpersonbankaccount|financialstatementtemplate|financialtransactiondetail|financialtransactionrefund|followingeventnotification|followingeventsubscription|groupmemberworkflowtrigger|interactionsessionlocation|reservationworkflowtrigger|analyticsdimfamilycurrent|analyticsdimpersoncurrent|analyticssourceattendance|analyticssourcegivingunit|connectionrequestactivity|connectionrequestworkflow|financialtransactionalert|financialtransactionimage|metafirstnamegenderlookup|registrationregistrantfee|schedulecategoryexclusion|signaturedocumenttemplate|workflowactionformsection|attendancecheckinsession|attributevaluehistorical|identityverificationcode|personallinksectionorder|registrationtemplateform|analyticsfactattendance|attributematrixtemplate|communicationattachment|followingsuggestiontype|grouplocationhistorical|personscheduleexclusion|registrationtemplatefee|communicationrecipient|connectionactivitytype|contentchannelitemslug|eventscheduledinstance|financialpaymentdetail|groupmemberrequirement|groupscheduleexclusion|registrationregistrant|analyticssourcecampus|communicationresponse|communicationtemplate|connectionopportunity|groupdemographicvalue|groupmemberassignment|groupmemberhistorical|interactiondevicetype|notificationrecipient|stepprogramcompletion|assetstorageprovider|attendanceoccurrence|financialtransaction|groupdemographictype|grouprequirementtype|identityverification|interactioncomponent|metricvaluepartition|registrationinstance|registrationtemplate|steptypeprerequisite|workflowactivitytype|attributematrixitem|benevolenceworkflow|eventitemoccurrence|personallinksection|registrationsession|reservationlocation|reservationministry|reservationresource|reservationworkflow|stepworkflowtrigger|streaktypeexclusion|systemcommunication|achievementattempt|analyticsdimcampus|attributequalifier|benevolencerequest|connectionworkflow|contentchannelitem|contentchanneltype|entitycampusfilter|followingeventtype|followingsuggested|interactionchannel|interactionsession|metalastnamelookup|metanicknamelookup|personpreviousname|workflowactionform|workflowactiontype|benevolenceresult|connectionrequest|eventcalendaritem|eventitemaudience|servicejobhistory|signaturedocument|webfarmnodemetric|connectionstatus|financialaccount|financialgateway|grouprequirement|interactionwrite|persisteddataset|Rock_Model_Block|workflowactivate|workflowactivity|achievementtype|attributematrix|backgroundcheck|benevolencetype|financialpledge|grouphistorical|metricpartition|personduplicate|personsearchkey|pluginmigration|reservationtype|workflowtrigger|assessmenttype|attendancecode|attributevalue|binaryfiledata|binaryfiletype|calendarevents|campusschedule|connectiontype|contentchannel|dataviewfilter|financialbatch|locationlayout|metriccategory|noteattachment|personaldevice|restcontroller|webfarmnodelog|workflowaction|communication|entitysetitem|eventcalendar|grouplocation|grouptyperole|lavashortcode|mergetemplate|metricytddata|pageshortlink|prayerrequest|relatedentity|authauditlog|definedvalue|documenttype|exceptionlog|mediaaccount|mediaelement|notification|personallink|personsignal|personviewed|registration|stepworkflow|workflowtype|auditdetail|campustopic|definedtype|groupmember|htmlcontent|interaction|mediafolder|metricvalue|ncoahistory|pagecontext|personalias|persontoken|phonenumber|reportfield|reservation|smspipeline|stepprogram|systememail|webfarmnode|workflowlog|entityname|assessment|attendance|authclient|binaryfile|entitytype|javascript|restaction|servicejob|servicelog|signaltype|sitedomain|stepstatus|streaktype|stylesheet|taggeditem|webrequest|attribute|authclaim|authscope|blocktype|entityset|eventitem|fieldtype|following|groupsync|grouptype|notewatch|pageroute|smsaction|userlogin|business|category|dataview|document|location|notetype|question|resource|schedule|steptype|workflow|history|campus|device|layout|metric|person|report|search|streak|audit|badge|block|group|auth|note|page|site|step|sql|tag))\\b",
          "captures": {
            "1": {
              "name": "keyword.control.$2.end.lava"
            }
          }
        },
        {
          "match": "(?:(?:(?<={%)|(?<={%-)|^)\\s*)(endfor|endtablerow)\\b",
          "captures": {
            "1": {
              "name": "keyword.control.loop.lava"
            }
          }
        },
        {
          "match": "(?:(?:(?<={%)|(?<={%-)|^)\\s*)(endcase)\\b",
          "captures": {
            "1": {
              "name": "keyword.control.case.lava"
            }
          }
        },
        {
          "match": "(?:(?:(?<={%)|(?<={%-)|^)\\s*)(analyticssourcefinancialtransaction|connectionopportunityconnectorgroup|financialscheduledtransactiondetail|interactioncontentchannelitemwrite|analyticsdimfamilyheadofhousehold|analyticsfactfinancialtransaction|connectionopportunitygroupconfig|analyticssourcefamilyhistorical|analyticssourcepersonhistorical|communicationresponseattachment|communicationtemplateattachment|grouplocationhistoricalschedule|eventitemoccurrencechannelitem|contentchannelitemassociation|financialscheduledtransaction|financialtransactionalerttype|registrationtemplateformfield|registrationtemplateplacement|analyticsdimfamilyhistorical|analyticsdimfinancialaccount|analyticsdimpersonhistorical|registrationtemplatediscount|achievementtypeprerequisite|connectionopportunitycampus|eventcalendarcontentchannel|eventitemoccurrencegroupmap|financialpersonsavedaccount|groupmemberscheduletemplate|registrationtemplatefeeitem|remoteauthenticationsession|workflowactionformattribute|workflowformbuildertemplate|analyticsdimfinancialbatch|benevolencerequestdocument|connectionopportunitygroup|connectionstatusautomation|financialpersonbankaccount|financialstatementtemplate|financialtransactiondetail|financialtransactionrefund|followingeventnotification|followingeventsubscription|groupmemberworkflowtrigger|interactionsessionlocation|reservationworkflowtrigger|analyticsdimfamilycurrent|analyticsdimpersoncurrent|analyticssourceattendance|analyticssourcegivingunit|connectionrequestactivity|connectionrequestworkflow|financialtransactionalert|financialtransactionimage|metafirstnamegenderlookup|registrationregistrantfee|schedulecategoryexclusion|signaturedocumenttemplate|workflowactionformsection|attendancecheckinsession|attributevaluehistorical|identityverificationcode|personallinksectionorder|registrationtemplateform|analyticsfactattendance|attributematrixtemplate|communicationattachment|followingsuggestiontype|grouplocationhistorical|personscheduleexclusion|registrationtemplatefee|communicationrecipient|connectionactivitytype|contentchannelitemslug|eventscheduledinstance|financialpaymentdetail|groupmemberrequirement|groupscheduleexclusion|registrationregistrant|analyticssourcecampus|communicationresponse|communicationtemplate|connectionopportunity|groupdemographicvalue|groupmemberassignment|groupmemberhistorical|interactiondevicetype|notificationrecipient|stepprogramcompletion|assetstorageprovider|attendanceoccurrence|financialtransaction|groupdemographictype|grouprequirementtype|identityverification|interactioncomponent|metricvaluepartition|registrationinstance|registrationtemplate|steptypeprerequisite|workflowactivitytype|attributematrixitem|benevolenceworkflow|eventitemoccurrence|personallinksection|registrationsession|reservationlocation|reservationministry|reservationresource|reservationworkflow|stepworkflowtrigger|streaktypeexclusion|systemcommunication|achievementattempt|analyticsdimcampus|attributequalifier|benevolencerequest|connectionworkflow|contentchannelitem|contentchanneltype|entitycampusfilter|followingeventtype|followingsuggested|interactionchannel|interactionsession|metalastnamelookup|metanicknamelookup|personpreviousname|workflowactionform|workflowactiontype|benevolenceresult|connectionrequest|eventcalendaritem|eventitemaudience|servicejobhistory|signaturedocument|webfarmnodemetric|connectionstatus|financialaccount|financialgateway|grouprequirement|interactionwrite|persisteddataset|Rock_Model_Block|workflowactivate|workflowactivity|achievementtype|attributematrix|backgroundcheck|benevolencetype|financialpledge|grouphistorical|metricpartition|personduplicate|personsearchkey|pluginmigration|reservationtype|workflowtrigger|assessmenttype|attendancecode|attributevalue|binaryfiledata|binaryfiletype|calendarevents|campusschedule|connectiontype|contentchannel|dataviewfilter|financialbatch|locationlayout|metriccategory|noteattachment|personaldevice|restcontroller|webfarmnodelog|workflowaction|communication|entitysetitem|eventcalendar|grouplocation|grouptyperole|lavashortcode|mergetemplate|metricytddata|pageshortlink|prayerrequest|relatedentity|authauditlog|definedvalue|documenttype|exceptionlog|mediaaccount|mediaelement|notification|personallink|personsignal|personviewed|registration|stepworkflow|workflowtype|auditdetail|campustopic|definedtype|groupmember|htmlcontent|interaction|mediafolder|metricvalue|ncoahistory|pagecontext|personalias|persontoken|phonenumber|reportfield|reservation|smspipeline|stepprogram|systememail|webfarmnode|workflowlog|javascript|stylesheet|entityname|assessment|attendance|authclient|binaryfile|entitytype|restaction|servicejob|servicelog|signaltype|sitedomain|stepstatus|streaktype|taggeditem|webrequest|attribute|authclaim|authscope|blocktype|entityset|eventitem|fieldtype|following|groupsync|grouptype|notewatch|pageroute|smsaction|userlogin|paginate|business|category|dataview|document|location|notetype|question|resource|schedule|steptype|workflow|capture|comment|history|campus|device|layout|metric|person|report|search|streak|audit|badge|block|group|case|auth|note|page|site|step|for|sql|tag|if)\\b",
          "captures": {
            "1": {
              "name": "keyword.control.other.lava"
            }
          }
        },
        {
          "match": "(?:(?:(?<={%)|(?<={%-)|^)\\s*)(endanalyticssourcefinancialtransaction|endconnectionopportunityconnectorgroup|endfinancialscheduledtransactiondetail|endinteractioncontentchannelitemwrite|endanalyticsdimfamilyheadofhousehold|endanalyticsfactfinancialtransaction|endconnectionopportunitygroupconfig|endanalyticssourcefamilyhistorical|endanalyticssourcepersonhistorical|endcommunicationresponseattachment|endcommunicationtemplateattachment|endgrouplocationhistoricalschedule|endeventitemoccurrencechannelitem|endcontentchannelitemassociation|endfinancialscheduledtransaction|endfinancialtransactionalerttype|endregistrationtemplateformfield|endregistrationtemplateplacement|endanalyticsdimfamilyhistorical|endanalyticsdimfinancialaccount|endanalyticsdimpersonhistorical|endregistrationtemplatediscount|endachievementtypeprerequisite|endconnectionopportunitycampus|endeventcalendarcontentchannel|endeventitemoccurrencegroupmap|endfinancialpersonsavedaccount|endgroupmemberscheduletemplate|endregistrationtemplatefeeitem|endremoteauthenticationsession|endworkflowactionformattribute|endworkflowformbuildertemplate|endanalyticsdimfinancialbatch|endbenevolencerequestdocument|endconnectionopportunitygroup|endconnectionstatusautomation|endfinancialpersonbankaccount|endfinancialstatementtemplate|endfinancialtransactiondetail|endfinancialtransactionrefund|endfollowingeventnotification|endfollowingeventsubscription|endgroupmemberworkflowtrigger|endinteractionsessionlocation|endreservationworkflowtrigger|endanalyticsdimfamilycurrent|endanalyticsdimpersoncurrent|endanalyticssourceattendance|endanalyticssourcegivingunit|endconnectionrequestactivity|endconnectionrequestworkflow|endfinancialtransactionalert|endfinancialtransactionimage|endmetafirstnamegenderlookup|endregistrationregistrantfee|endschedulecategoryexclusion|endsignaturedocumenttemplate|endworkflowactionformsection|endattendancecheckinsession|endattributevaluehistorical|endidentityverificationcode|endpersonallinksectionorder|endregistrationtemplateform|endanalyticsfactattendance|endattributematrixtemplate|endcommunicationattachment|endfollowingsuggestiontype|endgrouplocationhistorical|endpersonscheduleexclusion|endregistrationtemplatefee|endcommunicationrecipient|endconnectionactivitytype|endcontentchannelitemslug|endeventscheduledinstance|endfinancialpaymentdetail|endgroupmemberrequirement|endgroupscheduleexclusion|endregistrationregistrant|endanalyticssourcecampus|endcommunicationresponse|endcommunicationtemplate|endconnectionopportunity|endgroupdemographicvalue|endgroupmemberassignment|endgroupmemberhistorical|endinteractiondevicetype|endnotificationrecipient|endstepprogramcompletion|endassetstorageprovider|endattendanceoccurrence|endfinancialtransaction|endgroupdemographictype|endgrouprequirementtype|endidentityverification|endinteractioncomponent|endmetricvaluepartition|endregistrationinstance|endregistrationtemplate|endsteptypeprerequisite|endworkflowactivitytype|endattributematrixitem|endbenevolenceworkflow|endeventitemoccurrence|endpersonallinksection|endregistrationsession|endreservationlocation|endreservationministry|endreservationresource|endreservationworkflow|endstepworkflowtrigger|endstreaktypeexclusion|endsystemcommunication|endachievementattempt|endanalyticsdimcampus|endattributequalifier|endbenevolencerequest|endconnectionworkflow|endcontentchannelitem|endcontentchanneltype|endentitycampusfilter|endfollowingeventtype|endfollowingsuggested|endinteractionchannel|endinteractionsession|endmetalastnamelookup|endmetanicknamelookup|endpersonpreviousname|endworkflowactionform|endworkflowactiontype|endbenevolenceresult|endconnectionrequest|endeventcalendaritem|endeventitemaudience|endservicejobhistory|endsignaturedocument|endwebfarmnodemetric|endconnectionstatus|endfinancialaccount|endfinancialgateway|endgrouprequirement|endinteractionwrite|endpersisteddataset|endRock_Model_Block|endworkflowactivate|endworkflowactivity|endachievementtype|endattributematrix|endbackgroundcheck|endbenevolencetype|endfinancialpledge|endgrouphistorical|endmetricpartition|endpersonduplicate|endpersonsearchkey|endpluginmigration|endreservationtype|endworkflowtrigger|endassessmenttype|endattendancecode|endattributevalue|endbinaryfiledata|endbinaryfiletype|endcalendarevents|endcampusschedule|endconnectiontype|endcontentchannel|enddataviewfilter|endfinancialbatch|endlocationlayout|endmetriccategory|endnoteattachment|endpersonaldevice|endrestcontroller|endwebfarmnodelog|endworkflowaction|endcommunication|endentitysetitem|endeventcalendar|endgrouplocation|endgrouptyperole|endlavashortcode|endmergetemplate|endmetricytddata|endpageshortlink|endprayerrequest|endrelatedentity|endauthauditlog|enddefinedvalue|enddocumenttype|endexceptionlog|endmediaaccount|endmediaelement|endnotification|endpersonallink|endpersonsignal|endpersonviewed|endregistration|endstepworkflow|endworkflowtype|endauditdetail|endcampustopic|enddefinedtype|endgroupmember|endhtmlcontent|endinteraction|endmediafolder|endmetricvalue|endncoahistory|endpagecontext|endpersonalias|endpersontoken|endphonenumber|endreportfield|endreservation|endsmspipeline|endstepprogram|endsystememail|endwebfarmnode|endworkflowlog|endjavascript|endstylesheet|endentityname|endassessment|endattendance|endauthclient|endbinaryfile|endentitytype|endrestaction|endservicejob|endservicelog|endsignaltype|endsitedomain|endstepstatus|endstreaktype|endtaggeditem|endwebrequest|endattribute|endauthclaim|endauthscope|endblocktype|endentityset|endeventitem|endfieldtype|endfollowing|endgroupsync|endgrouptype|endnotewatch|endpageroute|endsmsaction|enduserlogin|endpaginate|endbusiness|endcategory|enddataview|enddocument|endlocation|endnotetype|endquestion|endresource|endschedule|endsteptype|endworkflow|endcapture|endcomment|endhistory|endcampus|enddevice|endlayout|endmetric|endperson|endreport|endsearch|endstreak|endaudit|endbadge|endblock|endgroup|endcase|endauth|endnote|endpage|endsite|endstep|endfor|endsql|endtag|endif)\\b",
          "captures": {
            "1": {
              "name": "keyword.control.other.lava"
            }
          }
        },
        {
          "match": "(?:(?:(?<={%)|(?<={%-)|^)\\s*)(else|break|continue|return)\\b",
          "captures": {
            "1": {
              "name": "keyword.control.other.lava"
            }
          }
        }
      ]
    },
    "tag_entity_command": {
      "patterns": [
        {
          "begin": "(?:(?:(?<={%)|(?<={%-)|^)\\s*)(analyticssourcefinancialtransaction|connectionopportunityconnectorgroup|financialscheduledtransactiondetail|interactioncontentchannelitemwrite|analyticsdimfamilyheadofhousehold|analyticsfactfinancialtransaction|connectionopportunitygroupconfig|analyticssourcefamilyhistorical|analyticssourcepersonhistorical|communicationresponseattachment|communicationtemplateattachment|grouplocationhistoricalschedule|eventitemoccurrencechannelitem|contentchannelitemassociation|financialscheduledtransaction|financialtransactionalerttype|registrationtemplateformfield|registrationtemplateplacement|analyticsdimfamilyhistorical|analyticsdimfinancialaccount|analyticsdimpersonhistorical|registrationtemplatediscount|achievementtypeprerequisite|connectionopportunitycampus|eventcalendarcontentchannel|eventitemoccurrencegroupmap|financialpersonsavedaccount|groupmemberscheduletemplate|registrationtemplatefeeitem|remoteauthenticationsession|workflowactionformattribute|workflowformbuildertemplate|analyticsdimfinancialbatch|benevolencerequestdocument|connectionopportunitygroup|connectionstatusautomation|financialpersonbankaccount|financialstatementtemplate|financialtransactiondetail|financialtransactionrefund|followingeventnotification|followingeventsubscription|groupmemberworkflowtrigger|interactionsessionlocation|reservationworkflowtrigger|analyticsdimfamilycurrent|analyticsdimpersoncurrent|analyticssourceattendance|analyticssourcegivingunit|connectionrequestactivity|connectionrequestworkflow|financialtransactionalert|financialtransactionimage|metafirstnamegenderlookup|registrationregistrantfee|schedulecategoryexclusion|signaturedocumenttemplate|workflowactionformsection|attendancecheckinsession|attributevaluehistorical|identityverificationcode|personallinksectionorder|registrationtemplateform|analyticsfactattendance|attributematrixtemplate|communicationattachment|followingsuggestiontype|grouplocationhistorical|personscheduleexclusion|registrationtemplatefee|communicationrecipient|connectionactivitytype|contentchannelitemslug|eventscheduledinstance|financialpaymentdetail|groupmemberrequirement|groupscheduleexclusion|registrationregistrant|analyticssourcecampus|communicationresponse|communicationtemplate|connectionopportunity|groupdemographicvalue|groupmemberassignment|groupmemberhistorical|interactiondevicetype|notificationrecipient|stepprogramcompletion|assetstorageprovider|attendanceoccurrence|financialtransaction|groupdemographictype|grouprequirementtype|identityverification|interactioncomponent|metricvaluepartition|registrationinstance|registrationtemplate|steptypeprerequisite|workflowactivitytype|attributematrixitem|benevolenceworkflow|eventitemoccurrence|personallinksection|registrationsession|reservationlocation|reservationministry|reservationresource|reservationworkflow|stepworkflowtrigger|streaktypeexclusion|systemcommunication|achievementattempt|analyticsdimcampus|attributequalifier|benevolencerequest|connectionworkflow|contentchannelitem|contentchanneltype|entitycampusfilter|followingeventtype|followingsuggested|interactionchannel|interactionsession|metalastnamelookup|metanicknamelookup|personpreviousname|workflowactionform|workflowactiontype|benevolenceresult|connectionrequest|eventcalendaritem|eventitemaudience|servicejobhistory|signaturedocument|webfarmnodemetric|connectionstatus|financialaccount|financialgateway|grouprequirement|interactionwrite|persisteddataset|Rock_Model_Block|workflowactivate|workflowactivity|achievementtype|attributematrix|backgroundcheck|benevolencetype|financialpledge|grouphistorical|metricpartition|personduplicate|personsearchkey|pluginmigration|reservationtype|workflowtrigger|assessmenttype|attendancecode|attributevalue|binaryfiledata|binaryfiletype|calendarevents|campusschedule|connectiontype|contentchannel|dataviewfilter|financialbatch|locationlayout|metriccategory|noteattachment|personaldevice|restcontroller|webfarmnodelog|workflowaction|communication|entitysetitem|eventcalendar|grouplocation|grouptyperole|lavashortcode|mergetemplate|metricytddata|pageshortlink|prayerrequest|relatedentity|authauditlog|definedvalue|documenttype|exceptionlog|mediaaccount|mediaelement|notification|personallink|personsignal|personviewed|registration|stepworkflow|workflowtype|auditdetail|campustopic|definedtype|groupmember|htmlcontent|interaction|mediafolder|metricvalue|ncoahistory|pagecontext|personalias|persontoken|phonenumber|reportfield|reservation|smspipeline|stepprogram|systememail|webfarmnode|workflowlog|entityname|assessment|attendance|authclient|binaryfile|entitytype|javascript|restaction|servicejob|servicelog|signaltype|sitedomain|stepstatus|streaktype|stylesheet|taggeditem|webrequest|attribute|authclaim|authscope|blocktype|entityset|eventitem|fieldtype|following|groupsync|grouptype|notewatch|pageroute|smsaction|userlogin|business|category|dataview|document|location|notetype|question|resource|schedule|steptype|workflow|history|campus|device|layout|metric|person|report|search|streak|audit|badge|block|group|auth|note|page|site|step|sql|tag)\\b",
          "beginCaptures": {
            "1": {
              "name": "keyword.control.$1.start.lava"
            }
          },
          "end": "(?=%})",
          "patterns": [
            {
              "include": "#tag_entity_command_body"
            }
          ]
        }
      ]
    },
    "tag_entity_command_body": {
      "patterns": [
        {
          "begin": "\\b(where:)\\s*(')",
          "beginCaptures": {
            "1": {
              "name": "variable.parameter.lava"
            },
            "2": {
              "name": "string.quoted.single.lava"
            }
          },
          "end": "(')",
          "endCaptures": {
            "1": {
              "name": "string.quoted.single.lava"
            }
          },
          "patterns": [
            {
              "name": "keyword.operator.comparison.lava",
              "match": "\\s+(\\*\\!|\\_\\!|\\>|\\<|((\\!|\\=|\\^|\\*|\\_|\\<|\\>\\$)\\=))\\s+"
            },
            {
              "name": "constant.language.lava",
              "match": "(false|true)"
            },
            {
              "name": "keyword.numeric.lava",
              "match": "\\b([0-9]+)"
            },
            {
              "name": "keyword.entity.lava",
              "match": "\\b([.a-zA-Z0-9]+)"
            },
            {
              "name": "keyword.operator.entity",
              "match": "\\s+(\\|\\||&&)\\s+"
            },
            {
              "include": "#string_double"
            },
            {
              "name": "invalid.illegal.good-command.lava",
              "match": "\\S"
            }
          ]
        },
        {
          "match": "\\b(select:|selectmany:)\\s*('[^']*')",
          "captures": {
            "1": {
              "name": "variable.parameter.lava"
            },
            "2": {
              "patterns": [
                {
                  "begin": "'",
                  "beginCaptures": {
                    "0": {
                      "name": "string.quoted.single.lava"
                    }
                  },
                  "end": "'",
                  "endCaptures": {
                    "0": {
                      "name": "string.quoted.single.lava"
                    }
                  },
                  "patterns": {
                    "include": "source.cs#expression"
                  }
                }
              ]
            }
          }
        },
        {
          "match": "\\b(id:|dataview:|limit:|offset:|ids:|sort:|dynamicparameters:|iterator:|securityenabled:|count:|expression:|lazyloadenabled:|include:|groupby:|prefetchattributes:|disableattributeprefetch:|includedeceased:)\\s*('[^']*')",
          "captures": {
            "1": {
              "name": "variable.parameter.lava"
            },
            "2": {
              "name": "string.quote.single.lava"
            }
          }
        },
        {
          "match": "\\S",
          "name": "invalid.illegal.bad-command.lava"
        }
      ]
    },
    "tag_expression": {
      "patterns": [
        {
          "include": "#tag_expression_without_arguments"
        },
        {
          "begin": "(?:(?:(?<={%)|(?<={%-)|^)\\s*)(\\w+)",
          "beginCaptures": {
            "1": {
              "name": "entity.name.tag.lava"
            }
          },
          "end": "(?=%})",
          "name": "meta.entity.tag.lava",
          "patterns": [
            {
              "include": "#value_expression"
            }
          ]
        }
      ]
    },
    "tag_expression_lava": {
      "patterns": [
        {
          "include": "#tag_expression_without_arguments"
        },
        {
          "begin": "(?:(?:(?<={%)|(?<={%-)|^)\\s*)(\\w+)",
          "beginCaptures": {
            "1": {
              "name": "entity.name.tag.lava"
            }
          },
          "end": "$",
          "name": "meta.entity.tag.lava",
          "patterns": [
            {
              "include": "#value_expression"
            }
          ]
        }
      ]
    },
    "object": {
      "begin": "(?<!comment %})(?<!comment -%})(?<!comment%})(?<!comment-%})(?<!raw %})(?<!raw -%})(?<!raw%})(?<!raw-%}){{-?",
      "end": "-?}}",
      "name": "meta.object.lava",
      "beginCaptures": {
        "0": {
          "name": "punctuation.definition.tag.begin.lava"
        }
      },
      "endCaptures": {
        "0": {
          "name": "punctuation.definition.tag.end.lava"
        }
      },
      "patterns": [
        {
          "include": "#filter"
        },
        {
          "include": "#attribute"
        },
        {
          "include": "#value_expression"
        }
      ]
    },
    "invalid_range": {
      "match": "\\((.(?!\\.\\.))+\\)",
      "name": "invalid.illegal.range.lava"
    },
    "range": {
      "begin": "\\(",
      "end": "\\)",
      "name": "meta.range.lava",
      "beginCaptures": {
        "0": {
          "name": "punctuation.section.parens.begin.lava"
        }
      },
      "endCaptures": {
        "0": {
          "name": "punctuation.section.parens.end.lava"
        }
      },
      "patterns": [
        {
          "match": "\\.\\.",
          "name": "punctuation.range.lava"
        },
        {
          "include": "#variable_lookup"
        },
        {
          "include": "#number"
        }
      ]
    },
    "number": {
      "match": "((-|\\+)\\s*)?[0-9]+(\\.[0-9]+)?",
      "name": "constant.numeric.lava"
    },
    "string": {
      "patterns": [
        {
          "include": "#string_single"
        },
        {
          "include": "#string_double"
        }
      ]
    },
    "string_double": {
      "begin": "\"",
      "end": "\"",
      "name": "string.quoted.double.lava"
    },
    "string_single": {
      "begin": "'",
      "end": "'",
      "name": "string.quoted.single.lava"
    },
    "operator": {
      "match": "(?:(?<=\\s)|\\b)(\\=\\=|!\\=|\\>|\\<|\\>\\=|\\<\\=|or|and|contains)(?:(?=\\s)|\\b)",
      "captures": {
        "1": {
          "name": "keyword.operator.expression.lava"
        }
      }
    },
    "language_constant": {
      "match": "\\b(false|true|nil|blank)\\b|empty(?!\\?)",
      "name": "constant.language.lava"
    },
    "language_quoted_support": {
      "match": "\\s*('Now'|'Global'|'Lava')\\s*",
      "name": "support.class.lava"
    },
    "attribute": {
      "begin": "\\w+:",
      "end": "(?=,|%}|}}|\\|)",
      "beginCaptures": {
        "0": {
          "name": "entity.other.attribute-name.lava"
        }
      },
      "patterns": [
        {
          "include": "#value_expression"
        }
      ]
    },
    "attribute_lava": {
      "begin": "\\w+:",
      "end": "(?=,|\\|)|$",
      "beginCaptures": {
        "0": {
          "name": "entity.other.attribute-name.lava"
        }
      },
      "patterns": [
        {
          "include": "#value_expression"
        }
      ]
    },
    "filter": {
      "match": "(\\|)\\s*(CreateEntitySet|GuidToId|RenderStructuredContentAsHtml|DateRangeFromSlidingFormat|PersonByPersonAlternateId|PersonImpersonationToken|LastAttendedGroupOfType|GeofencingGroupMembers|PersonActionIdentifier|EntityFromCachedObject|NumberToRomanNumerals|AllKeysFromDictionary|PluralizeForQuantity|NumberToOrdinalWords|DeleteUserPreference|GetPersonAlternateId|RemoveFromDictionary|PersonalizationItems|UnescapeDataString|PropertyToKeyValue|RockInstanceConfig|GetUserPreference|HasSignedDocument|PersonByAliasGuid|PersonTokenCreate|SetUserPreference|AddResponseHeader|EscapeDataString|RegExMatchValues|HumanizeDateTime|HumanizeTimeSpan|NextDayOfTheWeek|FormatAsCurrency|FamilySalutation|GeofencingGroups|AddLinkTagToHead|AddMetaTagToHead|PersistedDataset|FilterUnfollowed|UniqueIdentifier|IsInSecurityRole|AppendFollowing|RegExMatchValue|NumberToOrdinal|SortByAttribute|HeadOfHousehold|PersonByAliasId|PersonTokenRead|SetUrlParameter|CreateShortLink|RemoveFromArray|AddToDictionary|ObfuscateEmail|GroupsAttended|ResolveRockUrl|FilterFollowed|AddQuickReturn|StripNewlines|TruncateWords|DatesFromICal|NumberToWords|PageParameter|AddScriptLink|TriumphImgCdn|IsDateBetween|AsDateTimeUtc|FromMarkdown|ReplaceFirst|SentenceCase|WithFallback|NearestGroup|PersonByGuid|SetPageTitle|PageRedirect|Base64Encode|RegExReplace|RandomNumber|IsInDataView|NewlineToBr|ReplaceLast|SanitizeSql|Singularize|DaysFromNow|DaysInMonth|PhoneNumber|HasRightsTo|GroupByGuid|WriteCookie|RemoveFirst|Capitalize|HtmlDecode|Possessive|RegExMatch|ToCssClass|SundayDate|ToMidnight|ToQuantity|Desaturate|PersonById|ZebraPhoto|AsDateTime|AddCssLink|HmacSha256|AddToArray|FromBase64|IsFollowed|ReadCookie|AddSegment|Pluralize|StripHtml|TitleCase|TrimStart|DaysSince|DaysUntil|DividedBy|AdjustHue|Grayscale|Attribute|PageRoute|FromCache|AsBoolean|AsInteger|AsDecimal|GroupById|TimeOfDay|Downcase|ReadTime|ToPascal|Truncate|DateDiff|Humanize|ToString|Saturate|Contains|Children|Postback|Property|AsDouble|AsString|HmacSha1|XamlWrap|FromJSON|Distinct|ImageUrl|Decrypt|Default|Linkify|Prepend|Replace|TrimEnd|DateAdd|AtLeast|Ceiling|Lighten|FadeOut|OrderBy|Shuffle|Address|Parents|GroupBy|RunLava|Reverse|Append|Escape|Upcase|AtMost|Format|Modulo|Darken|FadeIn|Select|Campus|Spouse|Client|Base64|Sha256|ToJSON|Remove|Groups|First|Right|Slice|Split|Floor|Minus|Times|Shade|Where|Notes|Debug|Index|Steps|Group|Last|Size|Trim|Date|Plus|Tint|Join|Size|Sort|Page|Sha1|Uniq|Mix|Map|Url|Md5|Sum)\\:?",
      "captures": {
        "1": {
          "name": "punctuation.definition.tag.lava"
        },
        "2": {
          "name": "entity.name.function.lava"
        }
      }
    },
    "value_expression": {
      "patterns": [
        {
          "match": "(\\[)(\\|)(?=[^\\]]*)(?=\\])",
          "captures": {
            "2": {
              "name": "invalid.illegal.filter.lava"
            },
            "3": {
              "name": "invalid.illegal.filter.lava"
            }
          }
        },
        {
          "match": "(?<=\\s)(\\+|\\-|\\/|\\*)(?=\\s)",
          "name": "invalid.illegal.filter.lava"
        },
        {
          "include": "#language_quoted_support"
        },
        {
          "include": "#language_constant"
        },
        {
          "include": "#operator"
        },
        {
          "include": "#invalid_range"
        },
        {
          "include": "#range"
        },
        {
          "include": "#number"
        },
        {
          "include": "#string"
        },
        {
          "include": "#variable_lookup"
        }
      ]
    },
    "variable_lookup": {
      "patterns": [
        {
          "match": "\\b(CurrentPerson|Context|Campuses|PageParameter|CurrentPage|Person|CurrentBrowser|forloop|Item|item|Items)\\b",
          "name": "variable.language.lava"
        },
        {
          "match": "((?<=\\w\\:\\s)\\w+)",
          "name": "variable.parameter.lava"
        },
        {
          "begin": "(?<=\\w)\\[",
          "beginCaptures": {
            "0": {
              "name": "punctuation.section.brackets.begin.lava"
            }
          },
          "end": "\\]",
          "endCaptures": {
            "0": {
              "name": "punctuation.section.brackets.end.lava"
            }
          },
          "name": "meta.brackets.lava",
          "patterns": [
            {
              "include": "#string"
            }
          ]
        },
        {
          "match": "(?<=(\\w|\\])\\.)([-\\w]+\\??)",
          "name": "variable.other.member.lava"
        },
        {
          "match": "(?<=\\w)\\.(?=\\w)",
          "name": "punctuation.accessor.lava"
        },
        {
          "match": "(?i)[a-z_](\\w|(?:-(?!\\}\\})))*",
          "name": "variable.parameter.lava"
        }
      ]
    },
    "illegal_command_parameter": {
      "match": "\\b(\\S+:)\\s*('[^']*')",
      "name": "invalid.illegal.filter.lava"
    }
  }
}